// Copyright (C) 2024 Guyutongxue
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

import "./enums.proto";
import "./action.proto";

edition = "2023";

message ExposedMutation {
  oneof mutation {
    ChangePhaseEM change_phase = 1;
    StepRoundEM step_round = 2;
    SwitchTurnEM switch_turn = 3;
    SetWinnerEM set_winner = 4;
    TransferCardEM transfer_card = 5;
    SwitchActiveEM switch_active = 6;
    RemoveCardEM remove_card = 7;
    CreateCardEM create_card = 8;
    CreateCharacterEM create_character = 9;
    CreateEntityEM create_entity = 10;
    RemoveEntityEM remove_entity = 11;
    ModifyEntityVarEM modify_entity_var = 12;
    TransformDefinitionEM transform_definition = 13;
    ResetDiceEM reset_dice = 14;
    DamageEM damage = 15;
    ElementalReactionEM elemental_reaction = 16;
    ActionDoneEM action_done = 17;
    TriggeredEM triggered = 18;
    PlayerStatusChangeEM player_status_change = 19;
  }
}

enum PhaseType {
  INIT_HANDS = 0;
  INIT_ACTIVES = 1;
  ROLL = 2;
  ACTION = 3;
  END = 4;
  GAME_END = 5;
}

message ChangePhaseEM {
  PhaseType new_phase = 1;
}

message StepRoundEM { }

message SwitchTurnEM { }

message SetWinnerEM {
  optional int32 winner = 1;
}

enum CardArea {
  HAND = 0;
  PILE = 1;
}

message TransferCardEM {
  int32 who = 1;
  sint32 card_id = 2;
  int32 card_definition_id = 3;
  CardArea from = 4;
  CardArea to = 5;
  bool transfer_to_opp = 6;
}

message SwitchActiveEM {
  int32 who = 1;
  sint32 character_id = 2;
  int32 character_definition_id = 3;
  int32 via_skill_id = 4;
}

enum RemoveCardReason {
  OTHER = 0;
  PLAY = 1;
  ELEMENTAL_TUNNING = 2;
  HANDS_OVERFLOW = 3;
  DISPOSED = 4;
  DISABLED = 5;
  ON_DRAW_TRIGGERED = 6;
}

message RemoveCardEM {
  int32 who = 1;
  sint32 card_id = 2;
  int32 card_definition_id = 3;
  CardArea from = 4;
  RemoveCardReason reason = 5;
}

message CreateCardEM {
  int32 who = 1;
  sint32 card_id = 2;
  int32 card_definition_id = 3;
  CardArea to = 4;
}

message CreateCharacterEM {
  int32 who = 1;
  sint32 character_id = 2;
  int32 character_definition_id = 3;
}

message CreateEntityEM {
  int32 who = 1;
  sint32 entity_id = 2;
  int32 entity_definition_id = 3;
}

message RemoveEntityEM {
  int32 who = 1;
  sint32 entity_id = 2;
  int32 entity_definition_id = 3;
}

message ModifyEntityVarEM {
  sint32 entity_id = 1;
  int32 entity_definition_id = 2;
  string variable_name = 3;
  int32 variable_value = 4;
}

message TransformDefinitionEM {
  sint32 entity_id = 2;
  int32 new_entity_definition_id = 3;
}

message ResetDiceEM {
  int32 who = 1;
  repeated DiceType dice = 2;
}

message DamageEM {
  DamageType type = 1;
  int32 value = 2;
  sint32 target_id = 3;
  int32 target_definition_id = 4;
  sint32 source_id = 5;
  int32 source_definition_id = 6;
}

message ElementalReactionEM {
  Reaction type = 1;
  sint32 character_id = 3;
  int32 character_definition_id = 4;
}

message ActionDoneEM {
  int32 who = 1;
  Action action = 2;
}

message TriggeredEM {
  sint32 entity_id = 1;
  int32 entity_definition_id = 2;
}

enum PlayerStatus {
  NORMAL = 0;
  CHOOSING_ACTIVE = 1;
  SWITCHING_HANDS = 2;
  REROLLING = 3;
  ACTING = 4;
  SELECTING_CARDS = 4;
}

message PlayerStatusChangeEM {
  int32 who = 1;
  PlayerStatus status = 2;
}
