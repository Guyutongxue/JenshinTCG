// Copyright (C) 2024 Guyutongxue
// 
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// 
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

import "./enums.proto";
import "./mutation.proto";

edition = "2023";

message Notification {
  State state = 1;
  repeated ExposedMutation mutation = 2;
}

message State {
  PhaseType phase = 1;
  int32 round_number = 2;
  int32 current_turn = 3;
  optional int32 winner = 4;
  repeated PlayerState player = 5;
}

message PlayerState {
  optional sint32 active_character_id = 1;
  repeated CharacterState character = 2;
  repeated EntityState combat_status = 3;
  repeated EntityState summon = 4;
  repeated EntityState support = 5;
  repeated DiceType dice = 6;
  repeated CardState pile_card = 7;
  repeated CardState hand_card = 8;
  
  bool declared_end = 51;
  bool legend_used = 52;
  
  repeated SkillInfo initiative_skill = 101;
}

message CharacterState {
  sint32 id = 1;
  int32 definition_id = 2;
  repeated EntityState entity = 3;
  
  bool defeated = 51;
  int32 health = 52;
  int32 max_health = 53;
  int32 energy = 54;
  int32 max_energy = 55;
  Aura aura = 56;
}

message EntityState {
  sint32 id = 1;
  int32 definition_id = 2;
  map<string, int32> description_dict = 4;
  
  optional string variable_name = 51;
  optional int32 variable_value = 52;
  optional string hint_text = 53;
  optional int32 hint_icon = 54;
  bool has_usage_per_round = 55;
  optional EquipmentType equipment = 56;
}

enum EquipmentType {
  OTHER = 0;
  WEAPON = 1;
  ARTIFACT = 2;
  TECHNIQUE = 3;
}

message CardState {
  sint32 id = 1;
  int32 definition_id = 2;
  map<string, int32> description_dict = 4;
  map<DiceRequirementType, int32> definition_cost = 5;
}

message SkillInfo {
  int32 definition_id = 2;
  map<DiceRequirementType, int32> definition_cost = 5;
}
